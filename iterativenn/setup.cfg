# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = iterativenn
description = A library for developing iterativenn "neural networks"
version=0.3.0
author = Randy Paffenroth
author_email = randy.paffenroth@gmail.com
license = MIT
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8; variant=GFM
url = https://github.com/rcpaffenroth/iterativenn
project_urls =
    Source = https://bitbucket.org/rcpaffenroth/iterativenn/src/master/

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = Linux

# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 2 - Pre-Alpha
    Programming Language :: Python

[options]
packages = find:

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    python_version<3.8
    torch==2.0.1
    pytorch_lightning==2.0.2
    torchvision==0.15.2
    torchtext
    torchdata
    wandb==0.13.9
    hydra-core==1.3.1
    flatdict==4.0
    torch-tb-profiler==0.4.1
    numpy
    protobuf
    # Safer eval for processing the hydra yaml files
    asteval
    # Click is for the advance Runner
    click

[options.packages.find]
where = src

[options.extras_require]

# Add here test requirements (semicolon/line-separated)
testing =
    setuptools
    pytest
    pytest-cov
    nbmake
    line_profiler

# Add here requirements for running the notebooks (semicolon/line-separated)
notebook =
    jupyterlab==3.5
    ipykernel
    ipython
    bpython
    jupyter-client
    jupyter-core
    matplotlib
    plotly
    ipywidgets
    ipympl
    MarkupSafe
    # Symbolic math
    sympy
    # sklearn
    scikit-learn
    # JupyterLab language server protocol
    jupyterlab-lsp 
    # The python server for the above
    python-lsp-server 
    # A Git extension for JupyterLab
    jupyterlab-git
    # LaTeX editting
    # jupyterlab-latex' 
    # The katex latex rendered (instead of mathjax)
    jupyterlab-katex 
    # A canvas for drawings in jupyterlab
    ipycanvas 
    # Bokeh extension
    jupyter_bokeh 
    # Jupyter notebooks as Markdown documents, Julia, Python or R scripts
    jupytext 
    # Widgets for notebooks
    widgetsnbextension 
    # Matplotlib plotting
    ipympl
    # For making little videos
    imageio-ffmpeg
    imageio
    # For better printing
    rich
    # Run notebooks headless
    papermill
    
distributed = 
    joblib==1.2
    hydra-joblib-launcher==1.2
    ray==2.2
    # hydra-ray-launcher==1.2
    dask[complete]==2023.2.0
    jupyter-server-proxy


# Add here requirements for running OpenAI Gym (semicolon/line-separated)
gym =
    # NOTE:  I would love to start using gymnasium, but stable-baselines3
    # appears to not support it.  I guess I need to wait.
    #gymnasium[box2d,classic_control,toy_text,atari]==0.27.1
    #gym[box2d,classic_control,toy_text,atari]==0.25
    gym[box2d,classic_control,toy_text]==0.25
    stable-baselines3[extra]

# Add here requirements for running Huggingface (semicolon/line-separated)
huggingface =
    datasets
    transformers
    xformers

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this py.test issue.
addopts =
    # Don't do the long running tests ny default
    --verbose -m "not long"
# norecursedirs =
#     dist
#     build
#     .tox
testpaths = tests

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

